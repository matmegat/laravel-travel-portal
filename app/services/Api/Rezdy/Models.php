<?php

/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 *
 */
 

  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Item in a booking
     */
    class BookingItem  {
    
    
      /**
       * (no documentation provided)
       */
      private $productName;
      /**
       * (no documentation provided)
       */
      private $productCode;
      /**
       * (no documentation provided)
       */
      private $startTime;
      /**
       * (no documentation provided)
       */
      private $endTime;
      /**
       * (no documentation provided)
       */
      private $quantities;
      /**
       * (no documentation provided)
       */
      private $totalQuantity;
      /**
       * (no documentation provided)
       */
      private $amount;
      /**
       * (no documentation provided)
       */
      private $extras;
      /**
       * (no documentation provided)
       */
      private $participants;
      /**
       * (no documentation provided)
       */
      private $transferFrom;
      /**
       * (no documentation provided)
       */
      private $transferTo;
      /**
       * (no documentation provided)
       */
      private $transferReturn;
      /**
       * (no documentation provided)
       */
      private $subtotal;

      /**
       * Constructs a BookingItem from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getProductName() {
        return $this->productName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setProductName($productName) {
        $this->productName = $productName;
      }
      /**
       * (no documentation provided)
       */
      public function getProductCode() {
        return $this->productCode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setProductCode($productCode) {
        $this->productCode = $productCode;
      }
      /**
       * (no documentation provided)
       */
      public function getStartTime() {
        return $this->startTime;
      }
      
      /**
       * (no documentation provided)
       */
      public function setStartTime($startTime) {
        $this->startTime = $startTime;
      }
      /**
       * (no documentation provided)
       */
      public function getEndTime() {
        return $this->endTime;
      }
      
      /**
       * (no documentation provided)
       */
      public function setEndTime($endTime) {
        $this->endTime = $endTime;
      }
      /**
       * (no documentation provided)
       */
      public function getQuantities() {
        return $this->quantities;
      }
      
      /**
       * (no documentation provided)
       */
      public function setQuantities($quantities) {
        $this->quantities = $quantities;
      }
      /**
       * (no documentation provided)
       */
      public function getTotalQuantity() {
        return $this->totalQuantity;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTotalQuantity($totalQuantity) {
        $this->totalQuantity = $totalQuantity;
      }
      /**
       * (no documentation provided)
       */
      public function getAmount() {
        return $this->amount;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAmount($amount) {
        $this->amount = $amount;
      }
      /**
       * (no documentation provided)
       */
      public function getExtras() {
        return $this->extras;
      }
      
      /**
       * (no documentation provided)
       */
      public function setExtras($extras) {
        $this->extras = $extras;
      }
      /**
       * (no documentation provided)
       */
      public function getParticipants() {
        return $this->participants;
      }
      
      /**
       * (no documentation provided)
       */
      public function setParticipants($participants) {
        $this->participants = $participants;
      }
      /**
       * (no documentation provided)
       */
      public function getTransferFrom() {
        return $this->transferFrom;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTransferFrom($transferFrom) {
        $this->transferFrom = $transferFrom;
      }
      /**
       * (no documentation provided)
       */
      public function getTransferTo() {
        return $this->transferTo;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTransferTo($transferTo) {
        $this->transferTo = $transferTo;
      }
      /**
       * (no documentation provided)
       */
      public function getTransferReturn() {
        return $this->transferReturn;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTransferReturn($transferReturn) {
        $this->transferReturn = $transferReturn;
      }
      /**
       * (no documentation provided)
       */
      public function getSubtotal() {
        return $this->subtotal;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSubtotal($subtotal) {
        $this->subtotal = $subtotal;
      }
      /**
       * Returns the associative array for this BookingItem
       */
      public function toArray() {
        $a = [];
        if( $this->productName ) {
          $a["productName"] = $this->productName;
        }
        if( $this->productCode ) {
          $a["productCode"] = $this->productCode;
        }
        if( $this->startTime ) {
          $a["startTime"] = $this->startTime;
        }
        if( $this->endTime ) {
          $a["endTime"] = $this->endTime;
        }
        if( $this->quantities ) {
          $ab = [];
          foreach( $this->quantities as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['quantities'] = $ab;
        }
        if( $this->totalQuantity ) {
          $a["totalQuantity"] = $this->totalQuantity;
        }
        if( $this->amount ) {
          $a["amount"] = $this->amount;
        }
        if( $this->extras ) {
          $ab = [];
          foreach( $this->extras as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['extras'] = $ab;
        }
        if( $this->participants ) {
          $ab = [];
          foreach( $this->participants as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['participants'] = $ab;
        }
        if( $this->transferFrom ) {
          $a["transferFrom"] = $this->transferFrom;
        }
        if( $this->transferTo ) {
          $a["transferTo"] = $this->transferTo;
        }
        if( $this->transferReturn ) {
          $a["transferReturn"] = $this->transferReturn;
        }
        if( $this->subtotal ) {
          $a["subtotal"] = $this->subtotal;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this BookingItem
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this BookingItem from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['productName']) ) {
          $this->productName = $o["productName"];
        }
        if( isset($o['productCode']) ) {
          $this->productCode = $o["productCode"];
        }
        if( isset($o['startTime']) ) {
          $this->startTime = $o["startTime"];
        }
        if( isset($o['endTime']) ) {
          $this->endTime = $o["endTime"];
        }
        $this->quantities = [];
        if( isset($o['quantities']) ) {
          foreach( $o['quantities'] as $i => $x ) {
            $this->quantities[$i] = new \Com\Rezdy\Api\Pub\Model\Quantity($x);
          }
        }
        if( isset($o['totalQuantity']) ) {
          $this->totalQuantity = $o["totalQuantity"];
        }
        if( isset($o['amount']) ) {
          $this->amount = $o["amount"];
        }
        $this->extras = [];
        if( isset($o['extras']) ) {
          foreach( $o['extras'] as $i => $x ) {
            $this->extras[$i] = new \Com\Rezdy\Api\Pub\Model\Extra($x);
          }
        }
        $this->participants = [];
        if( isset($o['participants']) ) {
          foreach( $o['participants'] as $i => $x ) {
            $this->participants[$i] = new \Com\Rezdy\Api\Pub\Model\Participant($x);
          }
        }
        if( isset($o['transferFrom']) ) {
          $this->transferFrom = $o["transferFrom"];
        }
        if( isset($o['transferTo']) ) {
          $this->transferTo = $o["transferTo"];
        }
        if( isset($o['transferReturn']) ) {
          $this->transferReturn = $o["transferReturn"];
        }
        if( isset($o['subtotal']) ) {
          $this->subtotal = $o["subtotal"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Payment for a booking
     */
    class BookingPayment  {
    
    
      /**
       * (no documentation provided)
       */
      private $type;
      /**
       * (no documentation provided)
       */
      private $amount;
      /**
       * (no documentation provided)
       */
      private $currency;
      /**
       * (no documentation provided)
       */
      private $date;
      /**
       * (no documentation provided)
       */
      private $label;

      /**
       * Constructs a BookingPayment from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getType() {
        return $this->type;
      }
      
      /**
       * (no documentation provided)
       */
      public function setType($type) {
        $this->type = $type;
      }
      /**
       * (no documentation provided)
       */
      public function getAmount() {
        return $this->amount;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAmount($amount) {
        $this->amount = $amount;
      }
      /**
       * (no documentation provided)
       */
      public function getCurrency() {
        return $this->currency;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCurrency($currency) {
        $this->currency = $currency;
      }
      /**
       * (no documentation provided)
       */
      public function getDate() {
        return $this->date;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDate($date) {
        $this->date = $date;
      }
      /**
       * (no documentation provided)
       */
      public function getLabel() {
        return $this->label;
      }
      
      /**
       * (no documentation provided)
       */
      public function setLabel($label) {
        $this->label = $label;
      }
      /**
       * Returns the associative array for this BookingPayment
       */
      public function toArray() {
        $a = [];
        if( $this->type ) {
          $a["type"] = $this->type;
        }
        if( $this->amount ) {
          $a["amount"] = $this->amount;
        }
        if( $this->currency ) {
          $a["currency"] = $this->currency;
        }
        if( $this->date ) {
          $a["date"] = $this->date;
        }
        if( $this->label ) {
          $a["label"] = $this->label;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this BookingPayment
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this BookingPayment from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['type']) ) {
          $this->type = $o["type"];
        }
        if( isset($o['amount']) ) {
          $this->amount = $o["amount"];
        }
        if( isset($o['currency']) ) {
          $this->currency = $o["currency"];
        }
        if( isset($o['date']) ) {
          $this->date = $o["date"];
        }
        if( isset($o['label']) ) {
          $this->label = $o["label"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Request Error
     */
    class Error  {
    
    
      /**
       * (no documentation provided)
       */
      private $errorCode;
      /**
       * (no documentation provided)
       */
      private $errorMessage;

      /**
       * Constructs a Error from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getErrorCode() {
        return $this->errorCode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setErrorCode($errorCode) {
        $this->errorCode = $errorCode;
      }
      /**
       * (no documentation provided)
       */
      public function getErrorMessage() {
        return $this->errorMessage;
      }
      
      /**
       * (no documentation provided)
       */
      public function setErrorMessage($errorMessage) {
        $this->errorMessage = $errorMessage;
      }
      /**
       * Returns the associative array for this Error
       */
      public function toArray() {
        $a = [];
        if( $this->errorCode ) {
          $a["errorCode"] = $this->errorCode;
        }
        if( $this->errorMessage ) {
          $a["errorMessage"] = $this->errorMessage;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Error
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Error from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['errorCode']) ) {
          $this->errorCode = $o["errorCode"];
        }
        if( isset($o['errorMessage']) ) {
          $this->errorMessage = $o["errorMessage"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Payment for a booking
     */
    class Image  {
    
    
      /**
       * (no documentation provided)
       */
      private $itemUrl;
      /**
       * (no documentation provided)
       */
      private $thumbnailUrl;

      /**
       * Constructs a Image from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getItemUrl() {
        return $this->itemUrl;
      }
      
      /**
       * (no documentation provided)
       */
      public function setItemUrl($itemUrl) {
        $this->itemUrl = $itemUrl;
      }
      /**
       * (no documentation provided)
       */
      public function getThumbnailUrl() {
        return $this->thumbnailUrl;
      }
      
      /**
       * (no documentation provided)
       */
      public function setThumbnailUrl($thumbnailUrl) {
        $this->thumbnailUrl = $thumbnailUrl;
      }
      /**
       * Returns the associative array for this Image
       */
      public function toArray() {
        $a = [];
        if( $this->itemUrl ) {
          $a["itemUrl"] = $this->itemUrl;
        }
        if( $this->thumbnailUrl ) {
          $a["thumbnailUrl"] = $this->thumbnailUrl;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Image
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Image from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['itemUrl']) ) {
          $this->itemUrl = $o["itemUrl"];
        }
        if( isset($o['thumbnailUrl']) ) {
          $this->thumbnailUrl = $o["thumbnailUrl"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Price Option
     */
    class PriceOption  {
    
    
      /**
       * (no documentation provided)
       */
      private $id;
      /**
       * (no documentation provided)
       */
      private $price;
      /**
       * (no documentation provided)
       */
      private $label;
      /**
       * (no documentation provided)
       */
      private $seatsUsed;

      /**
       * Constructs a PriceOption from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getId() {
        return $this->id;
      }
      
      /**
       * (no documentation provided)
       */
      public function setId($id) {
        $this->id = $id;
      }
      /**
       * (no documentation provided)
       */
      public function getPrice() {
        return $this->price;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPrice($price) {
        $this->price = $price;
      }
      /**
       * (no documentation provided)
       */
      public function getLabel() {
        return $this->label;
      }
      
      /**
       * (no documentation provided)
       */
      public function setLabel($label) {
        $this->label = $label;
      }
      /**
       * (no documentation provided)
       */
      public function getSeatsUsed() {
        return $this->seatsUsed;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSeatsUsed($seatsUsed) {
        $this->seatsUsed = $seatsUsed;
      }
      /**
       * Returns the associative array for this PriceOption
       */
      public function toArray() {
        $a = [];
        if( $this->id ) {
          $a["id"] = $this->id;
        }
        if( $this->price ) {
          $a["price"] = $this->price;
        }
        if( $this->label ) {
          $a["label"] = $this->label;
        }
        if( $this->seatsUsed ) {
          $a["seatsUsed"] = $this->seatsUsed;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this PriceOption
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this PriceOption from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['id']) ) {
          $this->id = $o["id"];
        }
        if( isset($o['price']) ) {
          $this->price = $o["price"];
        }
        if( isset($o['label']) ) {
          $this->label = $o["label"];
        }
        if( isset($o['seatsUsed']) ) {
          $this->seatsUsed = $o["seatsUsed"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Payment for a booking
     */
    class Quantity  {
    
    
      /**
       * (no documentation provided)
       */
      private $optionId;
      /**
       * (no documentation provided)
       */
      private $optionLabel;
      /**
       * (no documentation provided)
       */
      private $optionPrice;
      /**
       * (no documentation provided)
       */
      private $value;

      /**
       * Constructs a Quantity from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getOptionId() {
        return $this->optionId;
      }
      
      /**
       * (no documentation provided)
       */
      public function setOptionId($optionId) {
        $this->optionId = $optionId;
      }
      /**
       * (no documentation provided)
       */
      public function getOptionLabel() {
        return $this->optionLabel;
      }
      
      /**
       * (no documentation provided)
       */
      public function setOptionLabel($optionLabel) {
        $this->optionLabel = $optionLabel;
      }
      /**
       * (no documentation provided)
       */
      public function getOptionPrice() {
        return $this->optionPrice;
      }
      
      /**
       * (no documentation provided)
       */
      public function setOptionPrice($optionPrice) {
        $this->optionPrice = $optionPrice;
      }
      /**
       * (no documentation provided)
       */
      public function getValue() {
        return $this->value;
      }
      
      /**
       * (no documentation provided)
       */
      public function setValue($value) {
        $this->value = $value;
      }
      /**
       * Returns the associative array for this Quantity
       */
      public function toArray() {
        $a = [];
        if( $this->optionId ) {
          $a["optionId"] = $this->optionId;
        }
        if( $this->optionLabel ) {
          $a["optionLabel"] = $this->optionLabel;
        }
        if( $this->optionPrice ) {
          $a["optionPrice"] = $this->optionPrice;
        }
        if( $this->value ) {
          $a["value"] = $this->value;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Quantity
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Quantity from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['optionId']) ) {
          $this->optionId = $o["optionId"];
        }
        if( isset($o['optionLabel']) ) {
          $this->optionLabel = $o["optionLabel"];
        }
        if( isset($o['optionPrice']) ) {
          $this->optionPrice = $o["optionPrice"];
        }
        if( isset($o['value']) ) {
          $this->value = $o["value"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Base Response class for all API calls
     * 
     * Holds the generic success, warning and error fields
     */
    class Response  {
    
    
      /**
       * (no documentation provided)
       */
      private $requestStatus;
      /**
       * (no documentation provided)
       */
      private $customers;
      /**
       * (no documentation provided)
       */
      private $bookings;
      /**
       * (no documentation provided)
       */
      private $products;
      /**
       * (no documentation provided)
       */
      private $sessions;
      /**
       * (no documentation provided)
       */
      private $vouchers;
      /**
       * (no documentation provided)
       */
      private $webhooks;
      /**
       * (no documentation provided)
       */
      private $data;

      /**
       * Constructs a Response from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getRequestStatus() {
        return $this->requestStatus;
      }
      
      /**
       * (no documentation provided)
       */
      public function setRequestStatus($requestStatus) {
        $this->requestStatus = $requestStatus;
      }
      /**
       * (no documentation provided)
       */
      public function getCustomers() {
        return $this->customers;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCustomers($customers) {
        $this->customers = $customers;
      }
      /**
       * (no documentation provided)
       */
      public function getBookings() {
        return $this->bookings;
      }
      
      /**
       * (no documentation provided)
       */
      public function setBookings($bookings) {
        $this->bookings = $bookings;
      }
      /**
       * (no documentation provided)
       */
      public function getProducts() {
        return $this->products;
      }
      
      /**
       * (no documentation provided)
       */
      public function setProducts($products) {
        $this->products = $products;
      }
      /**
       * (no documentation provided)
       */
      public function getSessions() {
        return $this->sessions;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSessions($sessions) {
        $this->sessions = $sessions;
      }
      /**
       * (no documentation provided)
       */
      public function getVouchers() {
        return $this->vouchers;
      }
      
      /**
       * (no documentation provided)
       */
      public function setVouchers($vouchers) {
        $this->vouchers = $vouchers;
      }
      /**
       * (no documentation provided)
       */
      public function getWebhooks() {
        return $this->webhooks;
      }
      
      /**
       * (no documentation provided)
       */
      public function setWebhooks($webhooks) {
        $this->webhooks = $webhooks;
      }
      /**
       * (no documentation provided)
       */
      public function getData() {
        return $this->data;
      }
      
      /**
       * (no documentation provided)
       */
      public function setData($data) {
        $this->data = $data;
      }
      /**
       * Returns the associative array for this Response
       */
      public function toArray() {
        $a = [];
        if( $this->requestStatus ) {
          $a["requestStatus"] = $this->requestStatus->toArray();
        }
        if( $this->customers ) {
          $ab = [];
          foreach( $this->customers as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['customers'] = $ab;
        }
        if( $this->bookings ) {
          $ab = [];
          foreach( $this->bookings as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['bookings'] = $ab;
        }
        if( $this->products ) {
          $ab = [];
          foreach( $this->products as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['products'] = $ab;
        }
        if( $this->sessions ) {
          $ab = [];
          foreach( $this->sessions as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['sessions'] = $ab;
        }
        if( $this->vouchers ) {
          $ab = [];
          foreach( $this->vouchers as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['vouchers'] = $ab;
        }
        if( $this->webhooks ) {
          $ab = [];
          foreach( $this->webhooks as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['webhooks'] = $ab;
        }
        if( $this->data ) {
          $a["data"] = $this->data->toArray();
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Response
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Response from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['requestStatus']) ) {
          $this->requestStatus = new \Com\Rezdy\Api\Pub\Model\RequestStatus($o["requestStatus"]);
        }
        $this->customers = [];
        if( isset($o['customers']) ) {
          foreach( $o['customers'] as $i => $x ) {
            $this->customers[$i] = new \Com\Rezdy\Api\Pub\Model\Customer($x);
          }
        }
        $this->bookings = [];
        if( isset($o['bookings']) ) {
          foreach( $o['bookings'] as $i => $x ) {
            $this->bookings[$i] = new \Com\Rezdy\Api\Pub\Model\Booking($x);
          }
        }
        $this->products = [];
        if( isset($o['products']) ) {
          foreach( $o['products'] as $i => $x ) {
            $this->products[$i] = new \Com\Rezdy\Api\Pub\Model\Product($x);
          }
        }
        $this->sessions = [];
        if( isset($o['sessions']) ) {
          foreach( $o['sessions'] as $i => $x ) {
            $this->sessions[$i] = new \Com\Rezdy\Api\Pub\Model\Session($x);
          }
        }
        $this->vouchers = [];
        if( isset($o['vouchers']) ) {
          foreach( $o['vouchers'] as $i => $x ) {
            $this->vouchers[$i] = new \Com\Rezdy\Api\Pub\Model\Voucher($x);
          }
        }
        $this->webhooks = [];
        if( isset($o['webhooks']) ) {
          foreach( $o['webhooks'] as $i => $x ) {
            $this->webhooks[$i] = new \Com\Rezdy\Api\Pub\Model\WebHook($x);
          }
        }
        if( isset($o['data']) ) {
          $this->data = new \Com\Rezdy\Api\Pub\Model\DataObject($o["data"]);
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Public User object
     */
    class User  {
    
    
      /**
       * (no documentation provided)
       */
      private $code;
      /**
       * (no documentation provided)
       */
      private $firstName;
      /**
       * (no documentation provided)
       */
      private $lastName;
      /**
       * (no documentation provided)
       */
      private $email;

      /**
       * Constructs a User from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getCode() {
        return $this->code;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCode($code) {
        $this->code = $code;
      }
      /**
       * (no documentation provided)
       */
      public function getFirstName() {
        return $this->firstName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setFirstName($firstName) {
        $this->firstName = $firstName;
      }
      /**
       * (no documentation provided)
       */
      public function getLastName() {
        return $this->lastName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setLastName($lastName) {
        $this->lastName = $lastName;
      }
      /**
       * (no documentation provided)
       */
      public function getEmail() {
        return $this->email;
      }
      
      /**
       * (no documentation provided)
       */
      public function setEmail($email) {
        $this->email = $email;
      }
      /**
       * Returns the associative array for this User
       */
      public function toArray() {
        $a = [];
        if( $this->code ) {
          $a["code"] = $this->code;
        }
        if( $this->firstName ) {
          $a["firstName"] = $this->firstName;
        }
        if( $this->lastName ) {
          $a["lastName"] = $this->lastName;
        }
        if( $this->email ) {
          $a["email"] = $this->email;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this User
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this User from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['code']) ) {
          $this->code = $o["code"];
        }
        if( isset($o['firstName']) ) {
          $this->firstName = $o["firstName"];
        }
        if( isset($o['lastName']) ) {
          $this->lastName = $o["lastName"];
        }
        if( isset($o['email']) ) {
          $this->email = $o["email"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Request Warning
     */
    class Warning  {
    
    
      /**
       * (no documentation provided)
       */
      private $warningMessage;

      /**
       * Constructs a Warning from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getWarningMessage() {
        return $this->warningMessage;
      }
      
      /**
       * (no documentation provided)
       */
      public function setWarningMessage($warningMessage) {
        $this->warningMessage = $warningMessage;
      }
      /**
       * Returns the associative array for this Warning
       */
      public function toArray() {
        $a = [];
        if( $this->warningMessage ) {
          $a["warningMessage"] = $this->warningMessage;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Warning
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Warning from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['warningMessage']) ) {
          $this->warningMessage = $o["warningMessage"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Request Status
     */
    class RequestStatus  {
    
    
      /**
       * (no documentation provided)
       */
      private $success;
      /**
       * (no documentation provided)
       */
      private $error;
      /**
       * (no documentation provided)
       */
      private $warning;
      /**
       * (no documentation provided)
       */
      private $version;

      /**
       * Constructs a RequestStatus from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getSuccess() {
        return $this->success;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSuccess($success) {
        $this->success = $success;
      }
      /**
       * (no documentation provided)
       */
      public function getError() {
        return $this->error;
      }
      
      /**
       * (no documentation provided)
       */
      public function setError($error) {
        $this->error = $error;
      }
      /**
       * (no documentation provided)
       */
      public function getWarning() {
        return $this->warning;
      }
      
      /**
       * (no documentation provided)
       */
      public function setWarning($warning) {
        $this->warning = $warning;
      }
      /**
       * (no documentation provided)
       */
      public function getVersion() {
        return $this->version;
      }
      
      /**
       * (no documentation provided)
       */
      public function setVersion($version) {
        $this->version = $version;
      }
      /**
       * Returns the associative array for this RequestStatus
       */
      public function toArray() {
        $a = [];
        if( $this->success ) {
          $a["success"] = $this->success;
        }
        if( $this->error ) {
          $a["error"] = $this->error->toArray();
        }
        if( $this->warning ) {
          $a["warning"] = $this->warning->toArray();
        }
        if( $this->version ) {
          $a["version"] = $this->version;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this RequestStatus
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this RequestStatus from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['success']) ) {
          $this->success = $o["success"];
        }
        if( isset($o['error']) ) {
          $this->error = new \Com\Rezdy\Api\Pub\Model\Error($o["error"]);
        }
        if( isset($o['warning']) ) {
          $this->warning = new \Com\Rezdy\Api\Pub\Model\Warning($o["warning"]);
        }
        if( isset($o['version']) ) {
          $this->version = $o["version"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Payment for a booking
     */
    class Participant  {
    
    
      /**
       * (no documentation provided)
       */
      private $fields;

      /**
       * Constructs a Participant from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getFields() {
        return $this->fields;
      }
      
      /**
       * (no documentation provided)
       */
      public function setFields($fields) {
        $this->fields = $fields;
      }
      /**
       * Returns the associative array for this Participant
       */
      public function toArray() {
        $a = [];
        if( $this->fields ) {
          $ab = [];
          foreach( $this->fields as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['fields'] = $ab;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Participant
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Participant from an associative array
       */
      public function initFromArray($o) {
        $this->fields = [];
        if( isset($o['fields']) ) {
          foreach( $o['fields'] as $i => $x ) {
            $this->fields[$i] = new \Com\Rezdy\Api\Pub\Model\BookingField($x);
          }
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Payment for a booking
     */
    class Extra  {
    
    
      /**
       * (no documentation provided)
       */
      private $name;
      /**
       * (no documentation provided)
       */
      private $description;
      /**
       * (no documentation provided)
       */
      private $price;
      /**
       * (no documentation provided)
       */
      private $quantity;

      /**
       * Constructs a Extra from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getName() {
        return $this->name;
      }
      
      /**
       * (no documentation provided)
       */
      public function setName($name) {
        $this->name = $name;
      }
      /**
       * (no documentation provided)
       */
      public function getDescription() {
        return $this->description;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDescription($description) {
        $this->description = $description;
      }
      /**
       * (no documentation provided)
       */
      public function getPrice() {
        return $this->price;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPrice($price) {
        $this->price = $price;
      }
      /**
       * (no documentation provided)
       */
      public function getQuantity() {
        return $this->quantity;
      }
      
      /**
       * (no documentation provided)
       */
      public function setQuantity($quantity) {
        $this->quantity = $quantity;
      }
      /**
       * Returns the associative array for this Extra
       */
      public function toArray() {
        $a = [];
        if( $this->name ) {
          $a["name"] = $this->name;
        }
        if( $this->description ) {
          $a["description"] = $this->description;
        }
        if( $this->price ) {
          $a["price"] = $this->price;
        }
        if( $this->quantity ) {
          $a["quantity"] = $this->quantity;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this Extra
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this Extra from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['name']) ) {
          $this->name = $o["name"];
        }
        if( isset($o['description']) ) {
          $this->description = $o["description"];
        }
        if( isset($o['price']) ) {
          $this->price = $o["price"];
        }
        if( isset($o['quantity']) ) {
          $this->quantity = $o["quantity"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * 
     */
    class DataObject  {
    
    

      /**
       * Constructs a DataObject from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * Returns the associative array for this DataObject
       */
      public function toArray() {
        $a = [];
        return $a;
      }
      
      /**
       * Returns the JSON string for this DataObject
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this DataObject from an associative array
       */
      public function initFromArray($o) {
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Payment for a booking
     */
    class BookingField  {
    
    
      /**
       * (no documentation provided)
       */
      private $label;
      /**
       * (no documentation provided)
       */
      private $value;
      /**
       * (no documentation provided)
       */
      private $requiredPerParticipant;
      /**
       * (no documentation provided)
       */
      private $requiredPerBooking;
      /**
       * (no documentation provided)
       */
      private $listOptions;

      /**
       * Constructs a BookingField from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getLabel() {
        return $this->label;
      }
      
      /**
       * (no documentation provided)
       */
      public function setLabel($label) {
        $this->label = $label;
      }
      /**
       * (no documentation provided)
       */
      public function getValue() {
        return $this->value;
      }
      
      /**
       * (no documentation provided)
       */
      public function setValue($value) {
        $this->value = $value;
      }
      /**
       * (no documentation provided)
       */
      public function getRequiredPerParticipant() {
        return $this->requiredPerParticipant;
      }
      
      /**
       * (no documentation provided)
       */
      public function setRequiredPerParticipant($requiredPerParticipant) {
        $this->requiredPerParticipant = $requiredPerParticipant;
      }
      /**
       * (no documentation provided)
       */
      public function getRequiredPerBooking() {
        return $this->requiredPerBooking;
      }
      
      /**
       * (no documentation provided)
       */
      public function setRequiredPerBooking($requiredPerBooking) {
        $this->requiredPerBooking = $requiredPerBooking;
      }
      /**
       * (no documentation provided)
       */
      public function getListOptions() {
        return $this->listOptions;
      }
      
      /**
       * (no documentation provided)
       */
      public function setListOptions($listOptions) {
        $this->listOptions = $listOptions;
      }
      /**
       * Returns the associative array for this BookingField
       */
      public function toArray() {
        $a = [];
        if( $this->label ) {
          $a["label"] = $this->label;
        }
        if( $this->value ) {
          $a["value"] = $this->value;
        }
        if( $this->requiredPerParticipant ) {
          $a["requiredPerParticipant"] = $this->requiredPerParticipant;
        }
        if( $this->requiredPerBooking ) {
          $a["requiredPerBooking"] = $this->requiredPerBooking;
        }
        if( $this->listOptions ) {
          $a["listOptions"] = $this->listOptions;
        }
        return $a;
      }
      
      /**
       * Returns the JSON string for this BookingField
       */
      public function toJson() {
        return json_encode($this->toArray());
      }

      /**
       * Initializes this BookingField from an associative array
       */
      public function initFromArray($o) {
        if( isset($o['label']) ) {
          $this->label = $o["label"];
        }
        if( isset($o['value']) ) {
          $this->value = $o["value"];
        }
        if( isset($o['requiredPerParticipant']) ) {
          $this->requiredPerParticipant = $o["requiredPerParticipant"];
        }
        if( isset($o['requiredPerBooking']) ) {
          $this->requiredPerBooking = $o["requiredPerBooking"];
        }
        if( isset($o['listOptions']) ) {
          $this->listOptions = $o["listOptions"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Model\Enums {

    // 
    class VoucherStatus {
    

      // (no documentation provided)
      const ISSUED = "ISSUED";

      // (no documentation provided)
      const REDEEMED = "REDEEMED";

      // (no documentation provided)
      const EXPIRED = "EXPIRED";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class WebHookType {
    

      // (no documentation provided)
      const NEW_ORDER = "NEW_ORDER";

      // (no documentation provided)
      const NEW_CONTACT = "NEW_CONTACT";

      // (no documentation provided)
      const UPDATED_ORDER = "UPDATED_ORDER";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class WebHookTargetType {
    

      // (no documentation provided)
      const XML = "XML";

      // (no documentation provided)
      const JSON = "JSON";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class Title {
    

      // (no documentation provided)
      const MR = "MR";

      // (no documentation provided)
      const MS = "MS";

      // (no documentation provided)
      const MRS = "MRS";

      // (no documentation provided)
      const MISS = "MISS";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class BookingMode {
    

      // (no documentation provided)
      const NO_DATE = "NO_DATE";

      // (no documentation provided)
      const DATE_ENQUIRY = "DATE_ENQUIRY";

      // (no documentation provided)
      const INVENTORY = "INVENTORY";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class ConfirmMode {
    

      // (no documentation provided)
      const MANUAL = "MANUAL";

      // (no documentation provided)
      const AUTOCONFIRM = "AUTOCONFIRM";

      // (no documentation provided)
      const MANUAL_THEN_AUTO = "MANUAL_THEN_AUTO";

      // (no documentation provided)
      const AUTO_THEN_MANUAL = "AUTO_THEN_MANUAL";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class Currency {
    

      // (no documentation provided)
      const AED = "AED";

      // (no documentation provided)
      const ANG = "ANG";

      // (no documentation provided)
      const ARS = "ARS";

      // (no documentation provided)
      const AUD = "AUD";

      // (no documentation provided)
      const AWG = "AWG";

      // (no documentation provided)
      const AZN = "AZN";

      // (no documentation provided)
      const BGN = "BGN";

      // (no documentation provided)
      const BHD = "BHD";

      // (no documentation provided)
      const BOB = "BOB";

      // (no documentation provided)
      const BRL = "BRL";

      // (no documentation provided)
      const BYR = "BYR";

      // (no documentation provided)
      const CAD = "CAD";

      // (no documentation provided)
      const CHF = "CHF";

      // (no documentation provided)
      const CLP = "CLP";

      // (no documentation provided)
      const CNY = "CNY";

      // (no documentation provided)
      const COP = "COP";

      // (no documentation provided)
      const CZK = "CZK";

      // (no documentation provided)
      const DKK = "DKK";

      // (no documentation provided)
      const EGP = "EGP";

      // (no documentation provided)
      const EUR = "EUR";

      // (no documentation provided)
      const FJD = "FJD";

      // (no documentation provided)
      const GBP = "GBP";

      // (no documentation provided)
      const GEL = "GEL";

      // (no documentation provided)
      const HKD = "HKD";

      // (no documentation provided)
      const HRK = "HRK";

      // (no documentation provided)
      const HUF = "HUF";

      // (no documentation provided)
      const IDR = "IDR";

      // (no documentation provided)
      const ILS = "ILS";

      // (no documentation provided)
      const INR = "INR";

      // (no documentation provided)
      const ISK = "ISK";

      // (no documentation provided)
      const JOD = "JOD";

      // (no documentation provided)
      const JPY = "JPY";

      // (no documentation provided)
      const KES = "KES";

      // (no documentation provided)
      const KRW = "KRW";

      // (no documentation provided)
      const KWD = "KWD";

      // (no documentation provided)
      const KZT = "KZT";

      // (no documentation provided)
      const LTL = "LTL";

      // (no documentation provided)
      const LVL = "LVL";

      // (no documentation provided)
      const MAD = "MAD";

      // (no documentation provided)
      const MKD = "MKD";

      // (no documentation provided)
      const MUR = "MUR";

      // (no documentation provided)
      const MXN = "MXN";

      // (no documentation provided)
      const MYR = "MYR";

      // (no documentation provided)
      const NGN = "NGN";

      // (no documentation provided)
      const NOK = "NOK";

      // (no documentation provided)
      const NZD = "NZD";

      // (no documentation provided)
      const PGK = "PGK";

      // (no documentation provided)
      const PHP = "PHP";

      // (no documentation provided)
      const OMR = "OMR";

      // (no documentation provided)
      const PEN = "PEN";

      // (no documentation provided)
      const PLN = "PLN";

      // (no documentation provided)
      const PYG = "PYG";

      // (no documentation provided)
      const QAR = "QAR";

      // (no documentation provided)
      const RON = "RON";

      // (no documentation provided)
      const RSD = "RSD";

      // (no documentation provided)
      const RUB = "RUB";

      // (no documentation provided)
      const SAR = "SAR";

      // (no documentation provided)
      const SBD = "SBD";

      // (no documentation provided)
      const SEK = "SEK";

      // (no documentation provided)
      const SGD = "SGD";

      // (no documentation provided)
      const SRD = "SRD";

      // (no documentation provided)
      const SYP = "SYP";

      // (no documentation provided)
      const THB = "THB";

      // (no documentation provided)
      const TOP = "TOP";

      // (no documentation provided)
      const TRY = "TRY";

      // (no documentation provided)
      const TWD = "TWD";

      // (no documentation provided)
      const UAH = "UAH";

      // (no documentation provided)
      const USD = "USD";

      // (no documentation provided)
      const UYU = "UYU";

      // (no documentation provided)
      const VEF = "VEF";

      // (no documentation provided)
      const VUV = "VUV";

      // (no documentation provided)
      const WST = "WST";

      // (no documentation provided)
      const XAF = "XAF";

      // (no documentation provided)
      const XOF = "XOF";

      // (no documentation provided)
      const XPF = "XPF";

      // (no documentation provided)
      const YER = "YER";

      // (no documentation provided)
      const ZAR = "ZAR";

      // (no documentation provided)
      const AFA = "AFA";

      // (no documentation provided)
      const ALL = "ALL";

      // (no documentation provided)
      const DZD = "DZD";

      // (no documentation provided)
      const AMD = "AMD";

      // (no documentation provided)
      const BSD = "BSD";

      // (no documentation provided)
      const BDT = "BDT";

      // (no documentation provided)
      const BBD = "BBD";

      // (no documentation provided)
      const BZD = "BZD";

      // (no documentation provided)
      const BMD = "BMD";

      // (no documentation provided)
      const BWP = "BWP";

      // (no documentation provided)
      const BND = "BND";

      // (no documentation provided)
      const BIF = "BIF";

      // (no documentation provided)
      const KHR = "KHR";

      // (no documentation provided)
      const CVE = "CVE";

      // (no documentation provided)
      const KYD = "KYD";

      // (no documentation provided)
      const KMF = "KMF";

      // (no documentation provided)
      const BAM = "BAM";

      // (no documentation provided)
      const CRC = "CRC";

      // (no documentation provided)
      const CUP = "CUP";

      // (no documentation provided)
      const CYP = "CYP";

      // (no documentation provided)
      const DJF = "DJF";

      // (no documentation provided)
      const DOP = "DOP";

      // (no documentation provided)
      const XCD = "XCD";

      // (no documentation provided)
      const ECS = "ECS";

      // (no documentation provided)
      const SVC = "SVC";

      // (no documentation provided)
      const ERN = "ERN";

      // (no documentation provided)
      const EEK = "EEK";

      // (no documentation provided)
      const ETB = "ETB";

      // (no documentation provided)
      const FKP = "FKP";

      // (no documentation provided)
      const CDF = "CDF";

      // (no documentation provided)
      const GMD = "GMD";

      // (no documentation provided)
      const GHS = "GHS";

      // (no documentation provided)
      const GIP = "GIP";

      // (no documentation provided)
      const GTQ = "GTQ";

      // (no documentation provided)
      const GNF = "GNF";

      // (no documentation provided)
      const GWP = "GWP";

      // (no documentation provided)
      const GYD = "GYD";

      // (no documentation provided)
      const HTG = "HTG";

      // (no documentation provided)
      const HNL = "HNL";

      // (no documentation provided)
      const IRR = "IRR";

      // (no documentation provided)
      const IQD = "IQD";

      // (no documentation provided)
      const JMD = "JMD";

      // (no documentation provided)
      const AOA = "AOA";

      // (no documentation provided)
      const KGS = "KGS";

      // (no documentation provided)
      const KIP = "KIP";

      // (no documentation provided)
      const LAK = "LAK";

      // (no documentation provided)
      const LBP = "LBP";

      // (no documentation provided)
      const LRD = "LRD";

      // (no documentation provided)
      const LYD = "LYD";

      // (no documentation provided)
      const LSL = "LSL";

      // (no documentation provided)
      const MOP = "MOP";

      // (no documentation provided)
      const MGF = "MGF";

      // (no documentation provided)
      const MGA = "MGA";

      // (no documentation provided)
      const MWK = "MWK";

      // (no documentation provided)
      const MVR = "MVR";

      // (no documentation provided)
      const MTL = "MTL";

      // (no documentation provided)
      const MRO = "MRO";

      // (no documentation provided)
      const MDL = "MDL";

      // (no documentation provided)
      const MNT = "MNT";

      // (no documentation provided)
      const MZM = "MZM";

      // (no documentation provided)
      const MMK = "MMK";

      // (no documentation provided)
      const NAD = "NAD";

      // (no documentation provided)
      const NPR = "NPR";

      // (no documentation provided)
      const NIO = "NIO";

      // (no documentation provided)
      const KPW = "KPW";

      // (no documentation provided)
      const PKR = "PKR";

      // (no documentation provided)
      const PAB = "PAB";

      // (no documentation provided)
      const RWF = "RWF";

      // (no documentation provided)
      const STD = "STD";

      // (no documentation provided)
      const SCR = "SCR";

      // (no documentation provided)
      const SLL = "SLL";

      // (no documentation provided)
      const SKK = "SKK";

      // (no documentation provided)
      const SIT = "SIT";

      // (no documentation provided)
      const SOS = "SOS";

      // (no documentation provided)
      const LKR = "LKR";

      // (no documentation provided)
      const SHP = "SHP";

      // (no documentation provided)
      const SDD = "SDD";

      // (no documentation provided)
      const SZL = "SZL";

      // (no documentation provided)
      const TJS = "TJS";

      // (no documentation provided)
      const TZS = "TZS";

      // (no documentation provided)
      const TTD = "TTD";

      // (no documentation provided)
      const TND = "TND";

      // (no documentation provided)
      const TMM = "TMM";

      // (no documentation provided)
      const UGX = "UGX";

      // (no documentation provided)
      const UZS = "UZS";

      // (no documentation provided)
      const VND = "VND";

      // (no documentation provided)
      const YUM = "YUM";

      // (no documentation provided)
      const ZMK = "ZMK";

      // (no documentation provided)
      const ZWD = "ZWD";

      // (no documentation provided)
      const AFN = "AFN";

      // (no documentation provided)
      const MZN = "MZN";

      // (no documentation provided)
      const UYI = "UYI";

      // (no documentation provided)
      const ZMW = "ZMW";

      // (no documentation provided)
      const GHC = "GHC";

      // (no documentation provided)
      const GGP = "GGP";

      // (no documentation provided)
      const IMP = "IMP";

      // (no documentation provided)
      const JEP = "JEP";

      // (no documentation provided)
      const TRL = "TRL";

      // (no documentation provided)
      const TVD = "TVD";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class OrderSource {
    

      // (no documentation provided)
      const ONLINE = "ONLINE";

      // (no documentation provided)
      const INTERNAL = "INTERNAL";

      // (no documentation provided)
      const PARTNERS = "PARTNERS";

      // (no documentation provided)
      const COMMUNITY = "COMMUNITY";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class OrderStatus {
    

      // (no documentation provided)
      const PROCESSING = "PROCESSING";

      // (no documentation provided)
      const NEW = "NEW";

      // (no documentation provided)
      const PENDING_SUPPLIER = "PENDING_SUPPLIER";

      // (no documentation provided)
      const PENDING_CUSTOMER = "PENDING_CUSTOMER";

      // (no documentation provided)
      const CONFIRMED = "CONFIRMED";

      // (no documentation provided)
      const CANCELLED = "CANCELLED";

      // (no documentation provided)
      const ABANDONED_CART = "ABANDONED_CART";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class PaymentOption {
    

      // (no documentation provided)
      const CREDITCARD = "CREDITCARD";

      // (no documentation provided)
      const PAYPAL = "PAYPAL";

      // (no documentation provided)
      const BANKTRANSFER = "BANKTRANSFER";

      // (no documentation provided)
      const CASH = "CASH";

      // (no documentation provided)
      const INVOICE = "INVOICE";

      // (no documentation provided)
      const EXTERNAL = "EXTERNAL";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class ProductType {
    

      // (no documentation provided)
      const ACTIVITY = "ACTIVITY";

      // (no documentation provided)
      const DAYTOUR = "DAYTOUR";

      // (no documentation provided)
      const MULTIDAYTOUR = "MULTIDAYTOUR";

      // (no documentation provided)
      const ENQUIRY = "ENQUIRY";

      // (no documentation provided)
      const PRIVATE_TOUR = "PRIVATE_TOUR";

      // (no documentation provided)
      const TICKET = "TICKET";

      // (no documentation provided)
      const RENTAL = "RENTAL";

      // (no documentation provided)
      const CHARTER = "CHARTER";

      // (no documentation provided)
      const EVENT = "EVENT";

      // (no documentation provided)
      const PASS = "PASS";

      // (no documentation provided)
      const HOPONHOPOFF = "HOPONHOPOFF";

      // (no documentation provided)
      const GIFT_CARD = "GIFT_CARD";

      // (no documentation provided)
      const TRANSFER = "TRANSFER";

      // (no documentation provided)
      const LESSON = "LESSON";

      // (no documentation provided)
      const CUSTOM = "CUSTOM";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class PaymentType {
    

      // (no documentation provided)
      const PAYPAL = "PAYPAL";

      // (no documentation provided)
      const CASH = "CASH";

      // (no documentation provided)
      const CREDITCARD = "CREDITCARD";

      // (no documentation provided)
      const BANKTRANSFER = "BANKTRANSFER";

      // (no documentation provided)
      const BANKCHEQUE = "BANKCHEQUE";

      // (no documentation provided)
      const REFUND = "REFUND";

      // (no documentation provided)
      const VOUCHER = "VOUCHER";

      // (no documentation provided)
      const PROMO_CODE = "PROMO_CODE";

      // (no documentation provided)
      const FREE = "FREE";

      // (no documentation provided)
      const OTHER = "OTHER";

      // (no documentation provided)
      const INVOICE = "INVOICE";
    
    }

  }  
    

  namespace Com\Rezdy\Model\Enums {

    // 
    class Gender {
    

      // (no documentation provided)
      const MALE = "MALE";

      // (no documentation provided)
      const FEMALE = "FEMALE";
    
    }

  }  
    

  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Public WebHook object
     */
    class WebHook extends \Com\Rezdy\Api\Pub\Model\DataObject  {
    
    
      /**
       * (no documentation provided)
       */
      private $id;
      /**
       * (no documentation provided)
       */
      private $name;
      /**
       * (no documentation provided)
       */
      private $hookType;
      /**
       * (no documentation provided)
       */
      private $targetUrl;
      /**
       * (no documentation provided)
       */
      private $targetType;

      /**
       * Constructs a WebHook from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getId() {
        return $this->id;
      }
      
      /**
       * (no documentation provided)
       */
      public function setId($id) {
        $this->id = $id;
      }
      /**
       * (no documentation provided)
       */
      public function getName() {
        return $this->name;
      }
      
      /**
       * (no documentation provided)
       */
      public function setName($name) {
        $this->name = $name;
      }
      /**
       * (no documentation provided)
       */
      public function getHookType() {
        return $this->hookType;
      }
      
      /**
       * (no documentation provided)
       */
      public function setHookType($hookType) {
        $this->hookType = $hookType;
      }
      /**
       * (no documentation provided)
       */
      public function getTargetUrl() {
        return $this->targetUrl;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTargetUrl($targetUrl) {
        $this->targetUrl = $targetUrl;
      }
      /**
       * (no documentation provided)
       */
      public function getTargetType() {
        return $this->targetType;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTargetType($targetType) {
        $this->targetType = $targetType;
      }
      /**
       * Returns the associative array for this WebHook
       */
      public function toArray() {
        $a = parent::toArray();
        if( $this->id ) {
          $a["id"] = $this->id;
        }
        if( $this->name ) {
          $a["name"] = $this->name;
        }
        if( $this->hookType ) {
          $a["hookType"] = $this->hookType;
        }
        if( $this->targetUrl ) {
          $a["targetUrl"] = $this->targetUrl;
        }
        if( $this->targetType ) {
          $a["targetType"] = $this->targetType;
        }
        return $a;
      }
      

      /**
       * Initializes this WebHook from an associative array
       */
      public function initFromArray($o) {
        parent::initFromArray($o);
        if( isset($o['id']) ) {
          $this->id = $o["id"];
        }
        if( isset($o['name']) ) {
          $this->name = $o["name"];
        }
        if( isset($o['hookType']) ) {
          $this->hookType = $o["hookType"];
        }
        if( isset($o['targetUrl']) ) {
          $this->targetUrl = $o["targetUrl"];
        }
        if( isset($o['targetType']) ) {
          $this->targetType = $o["targetType"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Public Product object
     */
    class Product extends \Com\Rezdy\Api\Pub\Model\DataObject  {
    
    
      /**
       * (no documentation provided)
       */
      private $productType;
      /**
       * (no documentation provided)
       */
      private $name;
      /**
       * (no documentation provided)
       */
      private $shortDescription;
      /**
       * (no documentation provided)
       */
      private $description;
      /**
       * (no documentation provided)
       */
      private $productCode;
      /**
       * (no documentation provided)
       */
      private $internalCode;
      /**
       * (no documentation provided)
       */
      private $supplierId;
      /**
       * (no documentation provided)
       */
      private $supplierName;
      /**
       * (no documentation provided)
       */
      private $advertisedPrice;
      /**
       * (no documentation provided)
       */
      private $priceOptions;
      /**
       * (no documentation provided)
       */
      private $unitLabel;
      /**
       * (no documentation provided)
       */
      private $unitLabelPlural;
      /**
       * (no documentation provided)
       */
      private $quantityRequired;
      /**
       * (no documentation provided)
       */
      private $quantityRequiredMin;
      /**
       * (no documentation provided)
       */
      private $quantityRequiredMax;
      /**
       * (no documentation provided)
       */
      private $images;
      /**
       * (no documentation provided)
       */
      private $bookingMode;
      /**
       * (no documentation provided)
       */
      private $charter;
      /**
       * (no documentation provided)
       */
      private $terms;
      /**
       * (no documentation provided)
       */
      private $extras;
      /**
       * (no documentation provided)
       */
      private $bookingFields;
      /**
       * (no documentation provided)
       */
      private $latitude;
      /**
       * (no documentation provided)
       */
      private $longitude;
      /**
       * (no documentation provided)
       */
      private $xeroAccount;
      /**
       * (no documentation provided)
       */
      private $confirmMode;

      /**
       * Constructs a Product from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getProductType() {
        return $this->productType;
      }
      
      /**
       * (no documentation provided)
       */
      public function setProductType($productType) {
        $this->productType = $productType;
      }
      /**
       * (no documentation provided)
       */
      public function getName() {
        return $this->name;
      }
      
      /**
       * (no documentation provided)
       */
      public function setName($name) {
        $this->name = $name;
      }
      /**
       * (no documentation provided)
       */
      public function getShortDescription() {
        return $this->shortDescription;
      }
      
      /**
       * (no documentation provided)
       */
      public function setShortDescription($shortDescription) {
        $this->shortDescription = $shortDescription;
      }
      /**
       * (no documentation provided)
       */
      public function getDescription() {
        return $this->description;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDescription($description) {
        $this->description = $description;
      }
      /**
       * (no documentation provided)
       */
      public function getProductCode() {
        return $this->productCode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setProductCode($productCode) {
        $this->productCode = $productCode;
      }
      /**
       * (no documentation provided)
       */
      public function getInternalCode() {
        return $this->internalCode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setInternalCode($internalCode) {
        $this->internalCode = $internalCode;
      }
      /**
       * (no documentation provided)
       */
      public function getSupplierId() {
        return $this->supplierId;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSupplierId($supplierId) {
        $this->supplierId = $supplierId;
      }
      /**
       * (no documentation provided)
       */
      public function getSupplierName() {
        return $this->supplierName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSupplierName($supplierName) {
        $this->supplierName = $supplierName;
      }
      /**
       * (no documentation provided)
       */
      public function getAdvertisedPrice() {
        return $this->advertisedPrice;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAdvertisedPrice($advertisedPrice) {
        $this->advertisedPrice = $advertisedPrice;
      }
      /**
       * (no documentation provided)
       */
      public function getPriceOptions() {
        return $this->priceOptions;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPriceOptions($priceOptions) {
        $this->priceOptions = $priceOptions;
      }
      /**
       * (no documentation provided)
       */
      public function getUnitLabel() {
        return $this->unitLabel;
      }
      
      /**
       * (no documentation provided)
       */
      public function setUnitLabel($unitLabel) {
        $this->unitLabel = $unitLabel;
      }
      /**
       * (no documentation provided)
       */
      public function getUnitLabelPlural() {
        return $this->unitLabelPlural;
      }
      
      /**
       * (no documentation provided)
       */
      public function setUnitLabelPlural($unitLabelPlural) {
        $this->unitLabelPlural = $unitLabelPlural;
      }
      /**
       * (no documentation provided)
       */
      public function getQuantityRequired() {
        return $this->quantityRequired;
      }
      
      /**
       * (no documentation provided)
       */
      public function setQuantityRequired($quantityRequired) {
        $this->quantityRequired = $quantityRequired;
      }
      /**
       * (no documentation provided)
       */
      public function getQuantityRequiredMin() {
        return $this->quantityRequiredMin;
      }
      
      /**
       * (no documentation provided)
       */
      public function setQuantityRequiredMin($quantityRequiredMin) {
        $this->quantityRequiredMin = $quantityRequiredMin;
      }
      /**
       * (no documentation provided)
       */
      public function getQuantityRequiredMax() {
        return $this->quantityRequiredMax;
      }
      
      /**
       * (no documentation provided)
       */
      public function setQuantityRequiredMax($quantityRequiredMax) {
        $this->quantityRequiredMax = $quantityRequiredMax;
      }
      /**
       * (no documentation provided)
       */
      public function getImages() {
        return $this->images;
      }
      
      /**
       * (no documentation provided)
       */
      public function setImages($images) {
        $this->images = $images;
      }
      /**
       * (no documentation provided)
       */
      public function getBookingMode() {
        return $this->bookingMode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setBookingMode($bookingMode) {
        $this->bookingMode = $bookingMode;
      }
      /**
       * (no documentation provided)
       */
      public function getCharter() {
        return $this->charter;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCharter($charter) {
        $this->charter = $charter;
      }
      /**
       * (no documentation provided)
       */
      public function getTerms() {
        return $this->terms;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTerms($terms) {
        $this->terms = $terms;
      }
      /**
       * (no documentation provided)
       */
      public function getExtras() {
        return $this->extras;
      }
      
      /**
       * (no documentation provided)
       */
      public function setExtras($extras) {
        $this->extras = $extras;
      }
      /**
       * (no documentation provided)
       */
      public function getBookingFields() {
        return $this->bookingFields;
      }
      
      /**
       * (no documentation provided)
       */
      public function setBookingFields($bookingFields) {
        $this->bookingFields = $bookingFields;
      }
      /**
       * (no documentation provided)
       */
      public function getLatitude() {
        return $this->latitude;
      }
      
      /**
       * (no documentation provided)
       */
      public function setLatitude($latitude) {
        $this->latitude = $latitude;
      }
      /**
       * (no documentation provided)
       */
      public function getLongitude() {
        return $this->longitude;
      }
      
      /**
       * (no documentation provided)
       */
      public function setLongitude($longitude) {
        $this->longitude = $longitude;
      }
      /**
       * (no documentation provided)
       */
      public function getXeroAccount() {
        return $this->xeroAccount;
      }
      
      /**
       * (no documentation provided)
       */
      public function setXeroAccount($xeroAccount) {
        $this->xeroAccount = $xeroAccount;
      }
      /**
       * (no documentation provided)
       */
      public function getConfirmMode() {
        return $this->confirmMode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setConfirmMode($confirmMode) {
        $this->confirmMode = $confirmMode;
      }
      /**
       * Returns the associative array for this Product
       */
      public function toArray() {
        $a = parent::toArray();
        if( $this->productType ) {
          $a["productType"] = $this->productType;
        }
        if( $this->name ) {
          $a["name"] = $this->name;
        }
        if( $this->shortDescription ) {
          $a["shortDescription"] = $this->shortDescription;
        }
        if( $this->description ) {
          $a["description"] = $this->description;
        }
        if( $this->productCode ) {
          $a["productCode"] = $this->productCode;
        }
        if( $this->internalCode ) {
          $a["internalCode"] = $this->internalCode;
        }
        if( $this->supplierId ) {
          $a["supplierId"] = $this->supplierId;
        }
        if( $this->supplierName ) {
          $a["supplierName"] = $this->supplierName;
        }
        if( $this->advertisedPrice ) {
          $a["advertisedPrice"] = $this->advertisedPrice;
        }
        if( $this->priceOptions ) {
          $ab = [];
          foreach( $this->priceOptions as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['priceOptions'] = $ab;
        }
        if( $this->unitLabel ) {
          $a["unitLabel"] = $this->unitLabel;
        }
        if( $this->unitLabelPlural ) {
          $a["unitLabelPlural"] = $this->unitLabelPlural;
        }
        if( $this->quantityRequired ) {
          $a["quantityRequired"] = $this->quantityRequired;
        }
        if( $this->quantityRequiredMin ) {
          $a["quantityRequiredMin"] = $this->quantityRequiredMin;
        }
        if( $this->quantityRequiredMax ) {
          $a["quantityRequiredMax"] = $this->quantityRequiredMax;
        }
        if( $this->images ) {
          $ab = [];
          foreach( $this->images as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['images'] = $ab;
        }
        if( $this->bookingMode ) {
          $a["bookingMode"] = $this->bookingMode;
        }
        if( $this->charter ) {
          $a["charter"] = $this->charter;
        }
        if( $this->terms ) {
          $a["terms"] = $this->terms;
        }
        if( $this->extras ) {
          $ab = [];
          foreach( $this->extras as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['extras'] = $ab;
        }
        if( $this->bookingFields ) {
          $ab = [];
          foreach( $this->bookingFields as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['bookingFields'] = $ab;
        }
        if( $this->latitude ) {
          $a["latitude"] = $this->latitude;
        }
        if( $this->longitude ) {
          $a["longitude"] = $this->longitude;
        }
        if( $this->xeroAccount ) {
          $a["xeroAccount"] = $this->xeroAccount;
        }
        if( $this->confirmMode ) {
          $a["confirmMode"] = $this->confirmMode;
        }
        return $a;
      }
      

      /**
       * Initializes this Product from an associative array
       */
      public function initFromArray($o) {
        parent::initFromArray($o);
        if( isset($o['productType']) ) {
          $this->productType = $o["productType"];
        }
        if( isset($o['name']) ) {
          $this->name = $o["name"];
        }
        if( isset($o['shortDescription']) ) {
          $this->shortDescription = $o["shortDescription"];
        }
        if( isset($o['description']) ) {
          $this->description = $o["description"];
        }
        if( isset($o['productCode']) ) {
          $this->productCode = $o["productCode"];
        }
        if( isset($o['internalCode']) ) {
          $this->internalCode = $o["internalCode"];
        }
        if( isset($o['supplierId']) ) {
          $this->supplierId = $o["supplierId"];
        }
        if( isset($o['supplierName']) ) {
          $this->supplierName = $o["supplierName"];
        }
        if( isset($o['advertisedPrice']) ) {
          $this->advertisedPrice = $o["advertisedPrice"];
        }
        $this->priceOptions = [];
        if( isset($o['priceOptions']) ) {
          foreach( $o['priceOptions'] as $i => $x ) {
            $this->priceOptions[$i] = new \Com\Rezdy\Api\Pub\Model\PriceOption($x);
          }
        }
        if( isset($o['unitLabel']) ) {
          $this->unitLabel = $o["unitLabel"];
        }
        if( isset($o['unitLabelPlural']) ) {
          $this->unitLabelPlural = $o["unitLabelPlural"];
        }
        if( isset($o['quantityRequired']) ) {
          $this->quantityRequired = $o["quantityRequired"];
        }
        if( isset($o['quantityRequiredMin']) ) {
          $this->quantityRequiredMin = $o["quantityRequiredMin"];
        }
        if( isset($o['quantityRequiredMax']) ) {
          $this->quantityRequiredMax = $o["quantityRequiredMax"];
        }
        $this->images = [];
        if( isset($o['images']) ) {
          foreach( $o['images'] as $i => $x ) {
            $this->images[$i] = new \Com\Rezdy\Api\Pub\Model\Image($x);
          }
        }
        if( isset($o['bookingMode']) ) {
          $this->bookingMode = $o["bookingMode"];
        }
        if( isset($o['charter']) ) {
          $this->charter = $o["charter"];
        }
        if( isset($o['terms']) ) {
          $this->terms = $o["terms"];
        }
        $this->extras = [];
        if( isset($o['extras']) ) {
          foreach( $o['extras'] as $i => $x ) {
            $this->extras[$i] = new \Com\Rezdy\Api\Pub\Model\Extra($x);
          }
        }
        $this->bookingFields = [];
        if( isset($o['bookingFields']) ) {
          foreach( $o['bookingFields'] as $i => $x ) {
            $this->bookingFields[$i] = new \Com\Rezdy\Api\Pub\Model\BookingField($x);
          }
        }
        if( isset($o['latitude']) ) {
          $this->latitude = $o["latitude"];
        }
        if( isset($o['longitude']) ) {
          $this->longitude = $o["longitude"];
        }
        if( isset($o['xeroAccount']) ) {
          $this->xeroAccount = $o["xeroAccount"];
        }
        if( isset($o['confirmMode']) ) {
          $this->confirmMode = $o["confirmMode"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Public Voucher model
     */
    class Voucher extends \Com\Rezdy\Api\Pub\Model\DataObject  {
    
    
      /**
       * (no documentation provided)
       */
      private $code;
      /**
       * (no documentation provided)
       */
      private $status;
      /**
       * (no documentation provided)
       */
      private $agentCode;
      /**
       * (no documentation provided)
       */
      private $internalNotes;
      /**
       * (no documentation provided)
       */
      private $issueDate;
      /**
       * (no documentation provided)
       */
      private $expiryDate;

      /**
       * Constructs a Voucher from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getCode() {
        return $this->code;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCode($code) {
        $this->code = $code;
      }
      /**
       * (no documentation provided)
       */
      public function getStatus() {
        return $this->status;
      }
      
      /**
       * (no documentation provided)
       */
      public function setStatus($status) {
        $this->status = $status;
      }
      /**
       * (no documentation provided)
       */
      public function getAgentCode() {
        return $this->agentCode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAgentCode($agentCode) {
        $this->agentCode = $agentCode;
      }
      /**
       * (no documentation provided)
       */
      public function getInternalNotes() {
        return $this->internalNotes;
      }
      
      /**
       * (no documentation provided)
       */
      public function setInternalNotes($internalNotes) {
        $this->internalNotes = $internalNotes;
      }
      /**
       * (no documentation provided)
       */
      public function getIssueDate() {
        return $this->issueDate;
      }
      
      /**
       * (no documentation provided)
       */
      public function setIssueDate($issueDate) {
        $this->issueDate = $issueDate;
      }
      /**
       * (no documentation provided)
       */
      public function getExpiryDate() {
        return $this->expiryDate;
      }
      
      /**
       * (no documentation provided)
       */
      public function setExpiryDate($expiryDate) {
        $this->expiryDate = $expiryDate;
      }
      /**
       * Returns the associative array for this Voucher
       */
      public function toArray() {
        $a = parent::toArray();
        if( $this->code ) {
          $a["code"] = $this->code;
        }
        if( $this->status ) {
          $a["status"] = $this->status;
        }
        if( $this->agentCode ) {
          $a["agentCode"] = $this->agentCode;
        }
        if( $this->internalNotes ) {
          $a["internalNotes"] = $this->internalNotes;
        }
        if( $this->issueDate ) {
          $a["issueDate"] = $this->issueDate;
        }
        if( $this->expiryDate ) {
          $a["expiryDate"] = $this->expiryDate;
        }
        return $a;
      }
      

      /**
       * Initializes this Voucher from an associative array
       */
      public function initFromArray($o) {
        parent::initFromArray($o);
        if( isset($o['code']) ) {
          $this->code = $o["code"];
        }
        if( isset($o['status']) ) {
          $this->status = $o["status"];
        }
        if( isset($o['agentCode']) ) {
          $this->agentCode = $o["agentCode"];
        }
        if( isset($o['internalNotes']) ) {
          $this->internalNotes = $o["internalNotes"];
        }
        if( isset($o['issueDate']) ) {
          $this->issueDate = $o["issueDate"];
        }
        if( isset($o['expiryDate']) ) {
          $this->expiryDate = $o["expiryDate"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Session object
     * 
     * Holds availability for a fixed timeslot and a specific product
     */
    class Session extends \Com\Rezdy\Api\Pub\Model\DataObject  {
    
    
      /**
       * (no documentation provided)
       */
      private $id;
      /**
       * (no documentation provided)
       */
      private $startTime;
      /**
       * (no documentation provided)
       */
      private $endTime;
      /**
       * (no documentation provided)
       */
      private $allDay;
      /**
       * (no documentation provided)
       */
      private $seats;
      /**
       * (no documentation provided)
       */
      private $seatsAvailable;
      /**
       * (no documentation provided)
       */
      private $priceOptions;

      /**
       * Constructs a Session from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getId() {
        return $this->id;
      }
      
      /**
       * (no documentation provided)
       */
      public function setId($id) {
        $this->id = $id;
      }
      /**
       * (no documentation provided)
       */
      public function getStartTime() {
        return $this->startTime;
      }
      
      /**
       * (no documentation provided)
       */
      public function setStartTime($startTime) {
        $this->startTime = $startTime;
      }
      /**
       * (no documentation provided)
       */
      public function getEndTime() {
        return $this->endTime;
      }
      
      /**
       * (no documentation provided)
       */
      public function setEndTime($endTime) {
        $this->endTime = $endTime;
      }
      /**
       * (no documentation provided)
       */
      public function getAllDay() {
        return $this->allDay;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAllDay($allDay) {
        $this->allDay = $allDay;
      }
      /**
       * (no documentation provided)
       */
      public function getSeats() {
        return $this->seats;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSeats($seats) {
        $this->seats = $seats;
      }
      /**
       * (no documentation provided)
       */
      public function getSeatsAvailable() {
        return $this->seatsAvailable;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSeatsAvailable($seatsAvailable) {
        $this->seatsAvailable = $seatsAvailable;
      }
      /**
       * (no documentation provided)
       */
      public function getPriceOptions() {
        return $this->priceOptions;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPriceOptions($priceOptions) {
        $this->priceOptions = $priceOptions;
      }
      /**
       * Returns the associative array for this Session
       */
      public function toArray() {
        $a = parent::toArray();
        if( $this->id ) {
          $a["id"] = $this->id;
        }
        if( $this->startTime ) {
          $a["startTime"] = $this->startTime;
        }
        if( $this->endTime ) {
          $a["endTime"] = $this->endTime;
        }
        if( $this->allDay ) {
          $a["allDay"] = $this->allDay;
        }
        if( $this->seats ) {
          $a["seats"] = $this->seats;
        }
        if( $this->seatsAvailable ) {
          $a["seatsAvailable"] = $this->seatsAvailable;
        }
        if( $this->priceOptions ) {
          $ab = [];
          foreach( $this->priceOptions as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['priceOptions'] = $ab;
        }
        return $a;
      }
      

      /**
       * Initializes this Session from an associative array
       */
      public function initFromArray($o) {
        parent::initFromArray($o);
        if( isset($o['id']) ) {
          $this->id = $o["id"];
        }
        if( isset($o['startTime']) ) {
          $this->startTime = $o["startTime"];
        }
        if( isset($o['endTime']) ) {
          $this->endTime = $o["endTime"];
        }
        if( isset($o['allDay']) ) {
          $this->allDay = $o["allDay"];
        }
        if( isset($o['seats']) ) {
          $this->seats = $o["seats"];
        }
        if( isset($o['seatsAvailable']) ) {
          $this->seatsAvailable = $o["seatsAvailable"];
        }
        $this->priceOptions = [];
        if( isset($o['priceOptions']) ) {
          foreach( $o['priceOptions'] as $i => $x ) {
            $this->priceOptions[$i] = new \Com\Rezdy\Api\Pub\Model\PriceOption($x);
          }
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Public Customer object
     */
    class Customer extends \Com\Rezdy\Api\Pub\Model\DataObject  {
    
    
      /**
       * (no documentation provided)
       */
      private $id;
      /**
       * (no documentation provided)
       */
      private $firstName;
      /**
       * (no documentation provided)
       */
      private $lastName;
      /**
       * (no documentation provided)
       */
      private $name;
      /**
       * (no documentation provided)
       */
      private $email;
      /**
       * (no documentation provided)
       */
      private $phone;
      /**
       * (no documentation provided)
       */
      private $middleName;
      /**
       * (no documentation provided)
       */
      private $companyName;
      /**
       * (no documentation provided)
       */
      private $mobile;
      /**
       * (no documentation provided)
       */
      private $fax;
      /**
       * (no documentation provided)
       */
      private $skype;
      /**
       * (no documentation provided)
       */
      private $dob;
      /**
       * (no documentation provided)
       */
      private $preferredLanguage;
      /**
       * (no documentation provided)
       */
      private $newsletter;
      /**
       * (no documentation provided)
       */
      private $marketing;
      /**
       * (no documentation provided)
       */
      private $aboutUs;
      /**
       * (no documentation provided)
       */
      private $title;
      /**
       * (no documentation provided)
       */
      private $gender;
      /**
       * (no documentation provided)
       */
      private $addressLine;
      /**
       * (no documentation provided)
       */
      private $addressLine2;
      /**
       * (no documentation provided)
       */
      private $postCode;
      /**
       * (no documentation provided)
       */
      private $city;
      /**
       * (no documentation provided)
       */
      private $state;
      /**
       * (no documentation provided)
       */
      private $countryCode;

      /**
       * Constructs a Customer from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getId() {
        return $this->id;
      }
      
      /**
       * (no documentation provided)
       */
      public function setId($id) {
        $this->id = $id;
      }
      /**
       * (no documentation provided)
       */
      public function getFirstName() {
        return $this->firstName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setFirstName($firstName) {
        $this->firstName = $firstName;
      }
      /**
       * (no documentation provided)
       */
      public function getLastName() {
        return $this->lastName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setLastName($lastName) {
        $this->lastName = $lastName;
      }
      /**
       * (no documentation provided)
       */
      public function getName() {
        return $this->name;
      }
      
      /**
       * (no documentation provided)
       */
      public function setName($name) {
        $this->name = $name;
      }
      /**
       * (no documentation provided)
       */
      public function getEmail() {
        return $this->email;
      }
      
      /**
       * (no documentation provided)
       */
      public function setEmail($email) {
        $this->email = $email;
      }
      /**
       * (no documentation provided)
       */
      public function getPhone() {
        return $this->phone;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPhone($phone) {
        $this->phone = $phone;
      }
      /**
       * (no documentation provided)
       */
      public function getMiddleName() {
        return $this->middleName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setMiddleName($middleName) {
        $this->middleName = $middleName;
      }
      /**
       * (no documentation provided)
       */
      public function getCompanyName() {
        return $this->companyName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCompanyName($companyName) {
        $this->companyName = $companyName;
      }
      /**
       * (no documentation provided)
       */
      public function getMobile() {
        return $this->mobile;
      }
      
      /**
       * (no documentation provided)
       */
      public function setMobile($mobile) {
        $this->mobile = $mobile;
      }
      /**
       * (no documentation provided)
       */
      public function getFax() {
        return $this->fax;
      }
      
      /**
       * (no documentation provided)
       */
      public function setFax($fax) {
        $this->fax = $fax;
      }
      /**
       * (no documentation provided)
       */
      public function getSkype() {
        return $this->skype;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSkype($skype) {
        $this->skype = $skype;
      }
      /**
       * (no documentation provided)
       */
      public function getDob() {
        return $this->dob;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDob($dob) {
        $this->dob = $dob;
      }
      /**
       * (no documentation provided)
       */
      public function getPreferredLanguage() {
        return $this->preferredLanguage;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPreferredLanguage($preferredLanguage) {
        $this->preferredLanguage = $preferredLanguage;
      }
      /**
       * (no documentation provided)
       */
      public function getNewsletter() {
        return $this->newsletter;
      }
      
      /**
       * (no documentation provided)
       */
      public function setNewsletter($newsletter) {
        $this->newsletter = $newsletter;
      }
      /**
       * (no documentation provided)
       */
      public function getMarketing() {
        return $this->marketing;
      }
      
      /**
       * (no documentation provided)
       */
      public function setMarketing($marketing) {
        $this->marketing = $marketing;
      }
      /**
       * (no documentation provided)
       */
      public function getAboutUs() {
        return $this->aboutUs;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAboutUs($aboutUs) {
        $this->aboutUs = $aboutUs;
      }
      /**
       * (no documentation provided)
       */
      public function getTitle() {
        return $this->title;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTitle($title) {
        $this->title = $title;
      }
      /**
       * (no documentation provided)
       */
      public function getGender() {
        return $this->gender;
      }
      
      /**
       * (no documentation provided)
       */
      public function setGender($gender) {
        $this->gender = $gender;
      }
      /**
       * (no documentation provided)
       */
      public function getAddressLine() {
        return $this->addressLine;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAddressLine($addressLine) {
        $this->addressLine = $addressLine;
      }
      /**
       * (no documentation provided)
       */
      public function getAddressLine2() {
        return $this->addressLine2;
      }
      
      /**
       * (no documentation provided)
       */
      public function setAddressLine2($addressLine2) {
        $this->addressLine2 = $addressLine2;
      }
      /**
       * (no documentation provided)
       */
      public function getPostCode() {
        return $this->postCode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPostCode($postCode) {
        $this->postCode = $postCode;
      }
      /**
       * (no documentation provided)
       */
      public function getCity() {
        return $this->city;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCity($city) {
        $this->city = $city;
      }
      /**
       * (no documentation provided)
       */
      public function getState() {
        return $this->state;
      }
      
      /**
       * (no documentation provided)
       */
      public function setState($state) {
        $this->state = $state;
      }
      /**
       * (no documentation provided)
       */
      public function getCountryCode() {
        return $this->countryCode;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCountryCode($countryCode) {
        $this->countryCode = $countryCode;
      }
      /**
       * Returns the associative array for this Customer
       */
      public function toArray() {
        $a = parent::toArray();
        if( $this->id ) {
          $a["id"] = $this->id;
        }
        if( $this->firstName ) {
          $a["firstName"] = $this->firstName;
        }
        if( $this->lastName ) {
          $a["lastName"] = $this->lastName;
        }
        if( $this->name ) {
          $a["name"] = $this->name;
        }
        if( $this->email ) {
          $a["email"] = $this->email;
        }
        if( $this->phone ) {
          $a["phone"] = $this->phone;
        }
        if( $this->middleName ) {
          $a["middleName"] = $this->middleName;
        }
        if( $this->companyName ) {
          $a["companyName"] = $this->companyName;
        }
        if( $this->mobile ) {
          $a["mobile"] = $this->mobile;
        }
        if( $this->fax ) {
          $a["fax"] = $this->fax;
        }
        if( $this->skype ) {
          $a["skype"] = $this->skype;
        }
        if( $this->dob ) {
          $a["dob"] = $this->dob;
        }
        if( $this->preferredLanguage ) {
          $a["preferredLanguage"] = $this->preferredLanguage;
        }
        if( $this->newsletter ) {
          $a["newsletter"] = $this->newsletter;
        }
        if( $this->marketing ) {
          $a["marketing"] = $this->marketing;
        }
        if( $this->aboutUs ) {
          $a["aboutUs"] = $this->aboutUs;
        }
        if( $this->title ) {
          $a["title"] = $this->title;
        }
        if( $this->gender ) {
          $a["gender"] = $this->gender;
        }
        if( $this->addressLine ) {
          $a["addressLine"] = $this->addressLine;
        }
        if( $this->addressLine2 ) {
          $a["addressLine2"] = $this->addressLine2;
        }
        if( $this->postCode ) {
          $a["postCode"] = $this->postCode;
        }
        if( $this->city ) {
          $a["city"] = $this->city;
        }
        if( $this->state ) {
          $a["state"] = $this->state;
        }
        if( $this->countryCode ) {
          $a["countryCode"] = $this->countryCode;
        }
        return $a;
      }
      

      /**
       * Initializes this Customer from an associative array
       */
      public function initFromArray($o) {
        parent::initFromArray($o);
        if( isset($o['id']) ) {
          $this->id = $o["id"];
        }
        if( isset($o['firstName']) ) {
          $this->firstName = $o["firstName"];
        }
        if( isset($o['lastName']) ) {
          $this->lastName = $o["lastName"];
        }
        if( isset($o['name']) ) {
          $this->name = $o["name"];
        }
        if( isset($o['email']) ) {
          $this->email = $o["email"];
        }
        if( isset($o['phone']) ) {
          $this->phone = $o["phone"];
        }
        if( isset($o['middleName']) ) {
          $this->middleName = $o["middleName"];
        }
        if( isset($o['companyName']) ) {
          $this->companyName = $o["companyName"];
        }
        if( isset($o['mobile']) ) {
          $this->mobile = $o["mobile"];
        }
        if( isset($o['fax']) ) {
          $this->fax = $o["fax"];
        }
        if( isset($o['skype']) ) {
          $this->skype = $o["skype"];
        }
        if( isset($o['dob']) ) {
          $this->dob = $o["dob"];
        }
        if( isset($o['preferredLanguage']) ) {
          $this->preferredLanguage = $o["preferredLanguage"];
        }
        if( isset($o['newsletter']) ) {
          $this->newsletter = $o["newsletter"];
        }
        if( isset($o['marketing']) ) {
          $this->marketing = $o["marketing"];
        }
        if( isset($o['aboutUs']) ) {
          $this->aboutUs = $o["aboutUs"];
        }
        if( isset($o['title']) ) {
          $this->title = $o["title"];
        }
        if( isset($o['gender']) ) {
          $this->gender = $o["gender"];
        }
        if( isset($o['addressLine']) ) {
          $this->addressLine = $o["addressLine"];
        }
        if( isset($o['addressLine2']) ) {
          $this->addressLine2 = $o["addressLine2"];
        }
        if( isset($o['postCode']) ) {
          $this->postCode = $o["postCode"];
        }
        if( isset($o['city']) ) {
          $this->city = $o["city"];
        }
        if( isset($o['state']) ) {
          $this->state = $o["state"];
        }
        if( isset($o['countryCode']) ) {
          $this->countryCode = $o["countryCode"];
        }
      }
    
    }
    
  }


  namespace Com\Rezdy\Api\Pub\Model {

    /**
     * Public booking object
     */
    class Booking extends \Com\Rezdy\Api\Pub\Model\DataObject  {
    
    
      /**
       * (no documentation provided)
       */
      private $customer;
      /**
       * (no documentation provided)
       */
      private $supplierId;
      /**
       * (no documentation provided)
       */
      private $supplierName;
      /**
       * (no documentation provided)
       */
      private $createdBy;
      /**
       * (no documentation provided)
       */
      private $resellerId;
      /**
       * (no documentation provided)
       */
      private $resellerName;
      /**
       * (no documentation provided)
       */
      private $resellerUser;
      /**
       * (no documentation provided)
       */
      private $orderNumber;
      /**
       * (no documentation provided)
       */
      private $items;
      /**
       * (no documentation provided)
       */
      private $totalAmount;
      /**
       * (no documentation provided)
       */
      private $totalCurrency;
      /**
       * (no documentation provided)
       */
      private $totalPaid;
      /**
       * (no documentation provided)
       */
      private $totalDue;
      /**
       * (no documentation provided)
       */
      private $dateCreated;
      /**
       * (no documentation provided)
       */
      private $dateConfirmed;
      /**
       * (no documentation provided)
       */
      private $datePaid;
      /**
       * (no documentation provided)
       */
      private $dateReconciled;
      /**
       * (no documentation provided)
       */
      private $status;
      /**
       * (no documentation provided)
       */
      private $comments;
      /**
       * (no documentation provided)
       */
      private $internalNotes;
      /**
       * (no documentation provided)
       */
      private $payments;
      /**
       * (no documentation provided)
       */
      private $fields;
      /**
       * (no documentation provided)
       */
      private $source;
      /**
       * (no documentation provided)
       */
      private $sourceReferrer;
      /**
       * (no documentation provided)
       */
      private $resellerSource;
      /**
       * (no documentation provided)
       */
      private $sourceChannel;
      /**
       * (no documentation provided)
       */
      private $resellerComments;
      /**
       * (no documentation provided)
       */
      private $surcharge;
      /**
       * (no documentation provided)
       */
      private $commission;
      /**
       * (no documentation provided)
       */
      private $vouchers;
      /**
       * (no documentation provided)
       */
      private $coupon;
      /**
       * (no documentation provided)
       */
      private $paymentOption;

      /**
       * Constructs a Booking from a (parsed) JSON hash
       */
      public function __construct($o = null) {
        if( $o ) {
          $this->initFromArray($o);
        }
      }
      
      /**
       * (no documentation provided)
       */
      public function getCustomer() {
        return $this->customer;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCustomer($customer) {
        $this->customer = $customer;
      }
      /**
       * (no documentation provided)
       */
      public function getSupplierId() {
        return $this->supplierId;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSupplierId($supplierId) {
        $this->supplierId = $supplierId;
      }
      /**
       * (no documentation provided)
       */
      public function getSupplierName() {
        return $this->supplierName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSupplierName($supplierName) {
        $this->supplierName = $supplierName;
      }
      /**
       * (no documentation provided)
       */
      public function getCreatedBy() {
        return $this->createdBy;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCreatedBy($createdBy) {
        $this->createdBy = $createdBy;
      }
      /**
       * (no documentation provided)
       */
      public function getResellerId() {
        return $this->resellerId;
      }
      
      /**
       * (no documentation provided)
       */
      public function setResellerId($resellerId) {
        $this->resellerId = $resellerId;
      }
      /**
       * (no documentation provided)
       */
      public function getResellerName() {
        return $this->resellerName;
      }
      
      /**
       * (no documentation provided)
       */
      public function setResellerName($resellerName) {
        $this->resellerName = $resellerName;
      }
      /**
       * (no documentation provided)
       */
      public function getResellerUser() {
        return $this->resellerUser;
      }
      
      /**
       * (no documentation provided)
       */
      public function setResellerUser($resellerUser) {
        $this->resellerUser = $resellerUser;
      }
      /**
       * (no documentation provided)
       */
      public function getOrderNumber() {
        return $this->orderNumber;
      }
      
      /**
       * (no documentation provided)
       */
      public function setOrderNumber($orderNumber) {
        $this->orderNumber = $orderNumber;
      }
      /**
       * (no documentation provided)
       */
      public function getItems() {
        return $this->items;
      }
      
      /**
       * (no documentation provided)
       */
      public function setItems($items) {
        $this->items = $items;
      }
      /**
       * (no documentation provided)
       */
      public function getTotalAmount() {
        return $this->totalAmount;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTotalAmount($totalAmount) {
        $this->totalAmount = $totalAmount;
      }
      /**
       * (no documentation provided)
       */
      public function getTotalCurrency() {
        return $this->totalCurrency;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTotalCurrency($totalCurrency) {
        $this->totalCurrency = $totalCurrency;
      }
      /**
       * (no documentation provided)
       */
      public function getTotalPaid() {
        return $this->totalPaid;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTotalPaid($totalPaid) {
        $this->totalPaid = $totalPaid;
      }
      /**
       * (no documentation provided)
       */
      public function getTotalDue() {
        return $this->totalDue;
      }
      
      /**
       * (no documentation provided)
       */
      public function setTotalDue($totalDue) {
        $this->totalDue = $totalDue;
      }
      /**
       * (no documentation provided)
       */
      public function getDateCreated() {
        return $this->dateCreated;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDateCreated($dateCreated) {
        $this->dateCreated = $dateCreated;
      }
      /**
       * (no documentation provided)
       */
      public function getDateConfirmed() {
        return $this->dateConfirmed;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDateConfirmed($dateConfirmed) {
        $this->dateConfirmed = $dateConfirmed;
      }
      /**
       * (no documentation provided)
       */
      public function getDatePaid() {
        return $this->datePaid;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDatePaid($datePaid) {
        $this->datePaid = $datePaid;
      }
      /**
       * (no documentation provided)
       */
      public function getDateReconciled() {
        return $this->dateReconciled;
      }
      
      /**
       * (no documentation provided)
       */
      public function setDateReconciled($dateReconciled) {
        $this->dateReconciled = $dateReconciled;
      }
      /**
       * (no documentation provided)
       */
      public function getStatus() {
        return $this->status;
      }
      
      /**
       * (no documentation provided)
       */
      public function setStatus($status) {
        $this->status = $status;
      }
      /**
       * (no documentation provided)
       */
      public function getComments() {
        return $this->comments;
      }
      
      /**
       * (no documentation provided)
       */
      public function setComments($comments) {
        $this->comments = $comments;
      }
      /**
       * (no documentation provided)
       */
      public function getInternalNotes() {
        return $this->internalNotes;
      }
      
      /**
       * (no documentation provided)
       */
      public function setInternalNotes($internalNotes) {
        $this->internalNotes = $internalNotes;
      }
      /**
       * (no documentation provided)
       */
      public function getPayments() {
        return $this->payments;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPayments($payments) {
        $this->payments = $payments;
      }
      /**
       * (no documentation provided)
       */
      public function getFields() {
        return $this->fields;
      }
      
      /**
       * (no documentation provided)
       */
      public function setFields($fields) {
        $this->fields = $fields;
      }
      /**
       * (no documentation provided)
       */
      public function getSource() {
        return $this->source;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSource($source) {
        $this->source = $source;
      }
      /**
       * (no documentation provided)
       */
      public function getSourceReferrer() {
        return $this->sourceReferrer;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSourceReferrer($sourceReferrer) {
        $this->sourceReferrer = $sourceReferrer;
      }
      /**
       * (no documentation provided)
       */
      public function getResellerSource() {
        return $this->resellerSource;
      }
      
      /**
       * (no documentation provided)
       */
      public function setResellerSource($resellerSource) {
        $this->resellerSource = $resellerSource;
      }
      /**
       * (no documentation provided)
       */
      public function getSourceChannel() {
        return $this->sourceChannel;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSourceChannel($sourceChannel) {
        $this->sourceChannel = $sourceChannel;
      }
      /**
       * (no documentation provided)
       */
      public function getResellerComments() {
        return $this->resellerComments;
      }
      
      /**
       * (no documentation provided)
       */
      public function setResellerComments($resellerComments) {
        $this->resellerComments = $resellerComments;
      }
      /**
       * (no documentation provided)
       */
      public function getSurcharge() {
        return $this->surcharge;
      }
      
      /**
       * (no documentation provided)
       */
      public function setSurcharge($surcharge) {
        $this->surcharge = $surcharge;
      }
      /**
       * (no documentation provided)
       */
      public function getCommission() {
        return $this->commission;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCommission($commission) {
        $this->commission = $commission;
      }
      /**
       * (no documentation provided)
       */
      public function getVouchers() {
        return $this->vouchers;
      }
      
      /**
       * (no documentation provided)
       */
      public function setVouchers($vouchers) {
        $this->vouchers = $vouchers;
      }
      /**
       * (no documentation provided)
       */
      public function getCoupon() {
        return $this->coupon;
      }
      
      /**
       * (no documentation provided)
       */
      public function setCoupon($coupon) {
        $this->coupon = $coupon;
      }
      /**
       * (no documentation provided)
       */
      public function getPaymentOption() {
        return $this->paymentOption;
      }
      
      /**
       * (no documentation provided)
       */
      public function setPaymentOption($paymentOption) {
        $this->paymentOption = $paymentOption;
      }
      /**
       * Returns the associative array for this Booking
       */
      public function toArray() {
        $a = parent::toArray();
        if( $this->customer ) {
          $a["customer"] = $this->customer->toArray();
        }
        if( $this->supplierId ) {
          $a["supplierId"] = $this->supplierId;
        }
        if( $this->supplierName ) {
          $a["supplierName"] = $this->supplierName;
        }
        if( $this->createdBy ) {
          $a["createdBy"] = $this->createdBy->toArray();
        }
        if( $this->resellerId ) {
          $a["resellerId"] = $this->resellerId;
        }
        if( $this->resellerName ) {
          $a["resellerName"] = $this->resellerName;
        }
        if( $this->resellerUser ) {
          $a["resellerUser"] = $this->resellerUser->toArray();
        }
        if( $this->orderNumber ) {
          $a["orderNumber"] = $this->orderNumber;
        }
        if( $this->items ) {
          $ab = [];
          foreach( $this->items as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['items'] = $ab;
        }
        if( $this->totalAmount ) {
          $a["totalAmount"] = $this->totalAmount;
        }
        if( $this->totalCurrency ) {
          $a["totalCurrency"] = $this->totalCurrency;
        }
        if( $this->totalPaid ) {
          $a["totalPaid"] = $this->totalPaid;
        }
        if( $this->totalDue ) {
          $a["totalDue"] = $this->totalDue;
        }
        if( $this->dateCreated ) {
          $a["dateCreated"] = $this->dateCreated;
        }
        if( $this->dateConfirmed ) {
          $a["dateConfirmed"] = $this->dateConfirmed;
        }
        if( $this->datePaid ) {
          $a["datePaid"] = $this->datePaid;
        }
        if( $this->dateReconciled ) {
          $a["dateReconciled"] = $this->dateReconciled;
        }
        if( $this->status ) {
          $a["status"] = $this->status;
        }
        if( $this->comments ) {
          $a["comments"] = $this->comments;
        }
        if( $this->internalNotes ) {
          $a["internalNotes"] = $this->internalNotes;
        }
        if( $this->payments ) {
          $ab = [];
          foreach( $this->payments as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['payments'] = $ab;
        }
        if( $this->fields ) {
          $ab = [];
          foreach( $this->fields as $i => $x ) {
            $ab[$i] = $x->toArray();
          }
          $a['fields'] = $ab;
        }
        if( $this->source ) {
          $a["source"] = $this->source;
        }
        if( $this->sourceReferrer ) {
          $a["sourceReferrer"] = $this->sourceReferrer;
        }
        if( $this->resellerSource ) {
          $a["resellerSource"] = $this->resellerSource;
        }
        if( $this->sourceChannel ) {
          $a["sourceChannel"] = $this->sourceChannel;
        }
        if( $this->resellerComments ) {
          $a["resellerComments"] = $this->resellerComments;
        }
        if( $this->surcharge ) {
          $a["surcharge"] = $this->surcharge;
        }
        if( $this->commission ) {
          $a["commission"] = $this->commission;
        }
        if( $this->vouchers ) {
          $ab = [];
          foreach( $this->vouchers as $i => $x ) {
            $ab[$i] = $x;
          }
          $a['vouchers'] = $ab;
        }
        if( $this->coupon ) {
          $a["coupon"] = $this->coupon;
        }
        if( $this->paymentOption ) {
          $a["paymentOption"] = $this->paymentOption;
        }
        return $a;
      }
      

      /**
       * Initializes this Booking from an associative array
       */
      public function initFromArray($o) {
        parent::initFromArray($o);
        if( isset($o['customer']) ) {
          $this->customer = new \Com\Rezdy\Api\Pub\Model\Customer($o["customer"]);
        }
        if( isset($o['supplierId']) ) {
          $this->supplierId = $o["supplierId"];
        }
        if( isset($o['supplierName']) ) {
          $this->supplierName = $o["supplierName"];
        }
        if( isset($o['createdBy']) ) {
          $this->createdBy = new \Com\Rezdy\Api\Pub\Model\User($o["createdBy"]);
        }
        if( isset($o['resellerId']) ) {
          $this->resellerId = $o["resellerId"];
        }
        if( isset($o['resellerName']) ) {
          $this->resellerName = $o["resellerName"];
        }
        if( isset($o['resellerUser']) ) {
          $this->resellerUser = new \Com\Rezdy\Api\Pub\Model\User($o["resellerUser"]);
        }
        if( isset($o['orderNumber']) ) {
          $this->orderNumber = $o["orderNumber"];
        }
        $this->items = [];
        if( isset($o['items']) ) {
          foreach( $o['items'] as $i => $x ) {
            $this->items[$i] = new \Com\Rezdy\Api\Pub\Model\BookingItem($x);
          }
        }
        if( isset($o['totalAmount']) ) {
          $this->totalAmount = $o["totalAmount"];
        }
        if( isset($o['totalCurrency']) ) {
          $this->totalCurrency = $o["totalCurrency"];
        }
        if( isset($o['totalPaid']) ) {
          $this->totalPaid = $o["totalPaid"];
        }
        if( isset($o['totalDue']) ) {
          $this->totalDue = $o["totalDue"];
        }
        if( isset($o['dateCreated']) ) {
          $this->dateCreated = $o["dateCreated"];
        }
        if( isset($o['dateConfirmed']) ) {
          $this->dateConfirmed = $o["dateConfirmed"];
        }
        if( isset($o['datePaid']) ) {
          $this->datePaid = $o["datePaid"];
        }
        if( isset($o['dateReconciled']) ) {
          $this->dateReconciled = $o["dateReconciled"];
        }
        if( isset($o['status']) ) {
          $this->status = $o["status"];
        }
        if( isset($o['comments']) ) {
          $this->comments = $o["comments"];
        }
        if( isset($o['internalNotes']) ) {
          $this->internalNotes = $o["internalNotes"];
        }
        $this->payments = [];
        if( isset($o['payments']) ) {
          foreach( $o['payments'] as $i => $x ) {
            $this->payments[$i] = new \Com\Rezdy\Api\Pub\Model\BookingPayment($x);
          }
        }
        $this->fields = [];
        if( isset($o['fields']) ) {
          foreach( $o['fields'] as $i => $x ) {
            $this->fields[$i] = new \Com\Rezdy\Api\Pub\Model\BookingField($x);
          }
        }
        if( isset($o['source']) ) {
          $this->source = $o["source"];
        }
        if( isset($o['sourceReferrer']) ) {
          $this->sourceReferrer = $o["sourceReferrer"];
        }
        if( isset($o['resellerSource']) ) {
          $this->resellerSource = $o["resellerSource"];
        }
        if( isset($o['sourceChannel']) ) {
          $this->sourceChannel = $o["sourceChannel"];
        }
        if( isset($o['resellerComments']) ) {
          $this->resellerComments = $o["resellerComments"];
        }
        if( isset($o['surcharge']) ) {
          $this->surcharge = $o["surcharge"];
        }
        if( isset($o['commission']) ) {
          $this->commission = $o["commission"];
        }
        $this->vouchers = [];
        if( isset($o['vouchers']) ) {
          foreach( $o['vouchers'] as $i => $x ) {
            $this->vouchers[$i] = $x;
          }
        }
        if( isset($o['coupon']) ) {
          $this->coupon = $o["coupon"];
        }
        if( isset($o['paymentOption']) ) {
          $this->paymentOption = $o["paymentOption"];
        }
      }
    
    }
    
  }

  
?>